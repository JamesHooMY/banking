// Code generated by MockGen. DO NOT EDIT.
// Source: ./auth.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAuthService is a mock of IAuthService interface.
type MockIAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthServiceMockRecorder
}

// MockIAuthServiceMockRecorder is the mock recorder for MockIAuthService.
type MockIAuthServiceMockRecorder struct {
	mock *MockIAuthService
}

// NewMockIAuthService creates a new mock instance.
func NewMockIAuthService(ctrl *gomock.Controller) *MockIAuthService {
	mock := &MockIAuthService{ctrl: ctrl}
	mock.recorder = &MockIAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthService) EXPECT() *MockIAuthServiceMockRecorder {
	return m.recorder
}

// APIKeyConfirmation mocks base method.
func (m *MockIAuthService) APIKeyConfirmation(ctx context.Context, userID uint, key, secret string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "APIKeyConfirmation", ctx, userID, key, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// APIKeyConfirmation indicates an expected call of APIKeyConfirmation.
func (mr *MockIAuthServiceMockRecorder) APIKeyConfirmation(ctx, userID, key, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIKeyConfirmation", reflect.TypeOf((*MockIAuthService)(nil).APIKeyConfirmation), ctx, userID, key, secret)
}

// JWTConfirmation mocks base method.
func (m *MockIAuthService) JWTConfirmation(ctx context.Context, email, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "JWTConfirmation", ctx, email, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// JWTConfirmation indicates an expected call of JWTConfirmation.
func (mr *MockIAuthServiceMockRecorder) JWTConfirmation(ctx, email, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JWTConfirmation", reflect.TypeOf((*MockIAuthService)(nil).JWTConfirmation), ctx, email, token)
}
